@page "/Hotel-Room/Create"
@using Models
@using Business.Repository.IRepository
@inject IHotelRoomRepository HotelRoomRepository
@inject NavigationManager NavigationManager

<div class="row mt-2 mb-5">
	<h3 class="card-title text-info mb-3 ml-3">@Title Hotel Room</h3>
	<div class="col-md-12">
		<div class="card">
			<div class="card-body">
				<EditForm Model="HotelRoomModel" OnValidSubmit="HandleHotelRoomUpsert">
					<DataAnnotationsValidator/>
					@*<ValidationSummary/>*@
					<div class="form-group">
						<label>Name</label>
						<InputText @bind-Value="HotelRoomModel.Name" class="form-control"></InputText>
						<ValidationMessage For="()=>HotelRoomModel.Name"></ValidationMessage>
					</div>
					<div class="form-group">
						<label>Occupancy</label>
						<InputNumber @bind-Value="HotelRoomModel.Occupancy" class="form-control"></InputNumber>
						<ValidationMessage For="()=>HotelRoomModel.Occupancy"></ValidationMessage>
					</div>
					<div class="form-group">
						<label>Rate</label>
						<InputNumber @bind-Value="HotelRoomModel.RegularRate" class="form-control"></InputNumber>
						<ValidationMessage For="()=>HotelRoomModel.RegularRate"></ValidationMessage>
					</div>
					<div class="form-group">
						<label>Square Feet</label>
						<InputText @bind-Value="HotelRoomModel.SqFt" class="form-control"></InputText>
					</div>
					<div class="form-group">
						<label>Details</label>
						<InputTextArea @bind-Value="HotelRoomModel.Details" class="form-control"></InputTextArea>
					</div>
					<div class="form-group">
						<button class="btn btn-primary">@Title Room</button>
						<NavLink href="Hotel-Room" class="btn btn-secondary">Back to Index</NavLink>
					</div>
				</EditForm>
			</div>
		</div>
	</div>
</div>

@code {
	private HotelRoomDTO HotelRoomModel { get; set; } = new HotelRoomDTO();
	private string Title { get; set; } = "Create";

	private async Task HandleHotelRoomUpsert()
	{
		var roomDetailsByName = await HotelRoomRepository.IsRoomUnique(HotelRoomModel.Name);
		if(roomDetailsByName!=null)
		{
			//there is duplicate room show error
			return;
		}
		var createResult = await HotelRoomRepository.CreateHotelRoom(HotelRoomModel);
		NavigationManager.NavigateTo("Hotel-Room");
	}
}
