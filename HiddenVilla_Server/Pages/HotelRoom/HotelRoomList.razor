@page "/Hotel-Room"
@using Models
@using Business.Repository.IRepository
@inject IHotelRoomRepository HotelRoomRepository

<div class="row mt-4">
	<div class="col-8">
		<h4 class="card-title text-info">Hotel Rooms</h4>
	</div>
	<div class="col-3 offset-1">
		<NavLink href="Hotel-Room/Create" class="btn btn-info form-control">Add New Room</NavLink>
	</div>
</div>

<div class="row mt-4">
	<div class="col-12">
		<table class="table table-bordered table-hover">
			<thead>
				<tr>
					<th>Name</th>
					<th>Occupancy</th>
					<th>Rate</th>
					<th>Square Feet</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@if(HotelRooms.Any())
				{
					foreach(var room in HotelRooms)
					{
						<tr>
							<td>@room.Name</td>
							<td>@room.Occupancy</td>
							<td>@room.RegularRate.ToString("c")</td>
							<td>@room.SqFt</td>
							<td></td>
						</tr>
					}
				}
				else
				{
					<tr>
						<td colspan="5">No records found</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

@code {
	private IEnumerable<HotelRoomDTO> HotelRooms { get; set; } = new List<HotelRoomDTO>();

	protected override async Task OnInitializedAsync()
	{
		HotelRooms = await HotelRoomRepository.GetAllHotelRooms();
	}
}
